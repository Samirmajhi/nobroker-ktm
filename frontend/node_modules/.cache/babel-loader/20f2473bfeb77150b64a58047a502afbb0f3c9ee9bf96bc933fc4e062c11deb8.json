{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:5000/api';// Create axios instance with default config\nconst api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Add request interceptor to include auth token\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Add response interceptor to handle auth errors\napi.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('token');window.location.href='/login';}return Promise.reject(error);});export const visitsAPI={// Get all visits for the current user\ngetVisits:async()=>{const response=await api.get('/visits/user');return response.data;},// Schedule a visit\nscheduleVisit:async visitData=>{const response=await api.post('/visits',visitData);return response.data;},// Update visit status\nupdateVisitStatus:async(visitId,statusData)=>{const response=await api.put(\"/visits/\".concat(visitId,\"/status\"),statusData);return response.data;},// Cancel a visit\ncancelVisit:async visitId=>{const response=await api.post(\"/visits/\".concat(visitId,\"/cancel\"));return response.data;},// Get visits for a specific listing\ngetListingVisits:async listingId=>{const response=await api.get(\"/visits/listing/\".concat(listingId));return response.data;},// Assign representative to a visit\nassignRepresentative:async(visitId,repId)=>{const response=await api.put(\"/visits/\".concat(visitId,\"/assign-rep\"),{repId});return response.data;},// Get visit statistics for a listing\ngetVisitStats:async listingId=>{const response=await api.get(\"/visits/listing/\".concat(listingId,\"/stats\"));return response.data;},// Submit tenant/owner decision on a visit\nsubmitDecision:async(visitId,data)=>{const response=await api.post(\"/visits/\".concat(visitId,\"/decision\"),data);return response.data;}};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","visitsAPI","getVisits","get","data","scheduleVisit","visitData","post","updateVisitStatus","visitId","statusData","put","cancelVisit","getListingVisits","listingId","assignRepresentative","repId","getVisitStats","submitDecision"],"sources":["/home/anonymous/Downloads/no-broker-kathmandu/frontend/src/services/visitsAPI.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add request interceptor to include auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor to handle auth errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const visitsAPI = {\r\n  // Get all visits for the current user\r\n  getVisits: async () => {\r\n    const response = await api.get('/visits/user');\r\n    return response.data;\r\n  },\r\n\r\n  // Schedule a visit\r\n  scheduleVisit: async (visitData: {\r\n    listing_id: string;\r\n    visit_datetime: string;\r\n    visit_notes?: string;\r\n  }) => {\r\n    const response = await api.post('/visits', visitData);\r\n    return response.data;\r\n  },\r\n\r\n  // Update visit status\r\n  updateVisitStatus: async (visitId: string, statusData: {\r\n    status: 'scheduled' | 'completed' | 'cancelled';\r\n    feedback?: string;\r\n  }) => {\r\n    const response = await api.put(`/visits/${visitId}/status`, statusData);\r\n    return response.data;\r\n  },\r\n\r\n  // Cancel a visit\r\n  cancelVisit: async (visitId: string) => {\r\n    const response = await api.post(`/visits/${visitId}/cancel`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get visits for a specific listing\r\n  getListingVisits: async (listingId: string) => {\r\n    const response = await api.get(`/visits/listing/${listingId}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Assign representative to a visit\r\n  assignRepresentative: async (visitId: string, repId: string) => {\r\n    const response = await api.put(`/visits/${visitId}/assign-rep`, { repId });\r\n    return response.data;\r\n  },\r\n\r\n  // Get visit statistics for a listing\r\n  getVisitStats: async (listingId: string) => {\r\n    const response = await api.get(`/visits/listing/${listingId}/stats`);\r\n    return response.data;\r\n  },\r\n  \r\n  // Submit tenant/owner decision on a visit\r\n  submitDecision: async (\r\n    visitId: string,\r\n    data: { decision: 'interested' | 'not_interested' | 'undecided'; notes?: string }\r\n  ) => {\r\n    const response = await api.post(`/visits/${visitId}/decision`, data);\r\n    return response.data;\r\n  },\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}