{"ast":null,"code":"import React from'react';import{Navigate}from'react-router-dom';import{useSelector}from'react-redux';import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children,requiredRole}=_ref;const{isAuthenticated,user,loading}=useSelector(state=>state.auth);// Show loading spinner while checking authentication\nif(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center min-h-screen\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"})});}// Redirect to login if not authenticated\nif(!isAuthenticated){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});}// Check role requirement if specified\nif(requiredRole&&user&&user.role!==requiredRole){// Redirect based on user role\nswitch(user.role){case'tenant':return/*#__PURE__*/_jsx(Navigate,{to:\"/dashboard\",replace:true});case'owner':return/*#__PURE__*/_jsx(Navigate,{to:\"/dashboard\",replace:true});case'staff':case'admin':return/*#__PURE__*/_jsx(Navigate,{to:\"/dashboard\",replace:true});default:return/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true});}}return/*#__PURE__*/_jsx(_Fragment,{children:children});};export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","useSelector","jsx","_jsx","Fragment","_Fragment","ProtectedRoute","_ref","children","requiredRole","isAuthenticated","user","loading","state","auth","className","to","replace","role"],"sources":["/home/anonymous/Downloads/no-broker-kathmandu/frontend/src/components/auth/ProtectedRoute.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../store/store';\r\n\r\ninterface ProtectedRouteProps {\r\n  children: React.ReactNode;\r\n  requiredRole?: 'tenant' | 'owner' | 'staff' | 'admin';\r\n}\r\n\r\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children, requiredRole }) => {\r\n  const { isAuthenticated, user, loading } = useSelector((state: RootState) => state.auth);\r\n\r\n  // Show loading spinner while checking authentication\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center min-h-screen\">\r\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Redirect to login if not authenticated\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  // Check role requirement if specified\r\n  if (requiredRole && user && user.role !== requiredRole) {\r\n    // Redirect based on user role\r\n    switch (user.role) {\r\n      case 'tenant':\r\n        return <Navigate to=\"/dashboard\" replace />;\r\n      case 'owner':\r\n        return <Navigate to=\"/dashboard\" replace />;\r\n      case 'staff':\r\n      case 'admin':\r\n        return <Navigate to=\"/dashboard\" replace />;\r\n      default:\r\n        return <Navigate to=\"/\" replace />;\r\n    }\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,WAAW,KAAQ,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,yBAQ1C,KAAM,CAAAC,cAA6C,CAAGC,IAAA,EAAgC,IAA/B,CAAEC,QAAQ,CAAEC,YAAa,CAAC,CAAAF,IAAA,CAC/E,KAAM,CAAEG,eAAe,CAAEC,IAAI,CAAEC,OAAQ,CAAC,CAAGX,WAAW,CAAEY,KAAgB,EAAKA,KAAK,CAACC,IAAI,CAAC,CAExF;AACA,GAAIF,OAAO,CAAE,CACX,mBACET,IAAA,QAAKY,SAAS,CAAC,+CAA+C,CAAAP,QAAA,cAC5DL,IAAA,QAAKY,SAAS,CAAC,gEAAgE,CAAM,CAAC,CACnF,CAAC,CAEV,CAEA;AACA,GAAI,CAACL,eAAe,CAAE,CACpB,mBAAOP,IAAA,CAACH,QAAQ,EAACgB,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CACzC,CAEA;AACA,GAAIR,YAAY,EAAIE,IAAI,EAAIA,IAAI,CAACO,IAAI,GAAKT,YAAY,CAAE,CACtD;AACA,OAAQE,IAAI,CAACO,IAAI,EACf,IAAK,QAAQ,CACX,mBAAOf,IAAA,CAACH,QAAQ,EAACgB,EAAE,CAAC,YAAY,CAACC,OAAO,MAAE,CAAC,CAC7C,IAAK,OAAO,CACV,mBAAOd,IAAA,CAACH,QAAQ,EAACgB,EAAE,CAAC,YAAY,CAACC,OAAO,MAAE,CAAC,CAC7C,IAAK,OAAO,CACZ,IAAK,OAAO,CACV,mBAAOd,IAAA,CAACH,QAAQ,EAACgB,EAAE,CAAC,YAAY,CAACC,OAAO,MAAE,CAAC,CAC7C,QACE,mBAAOd,IAAA,CAACH,QAAQ,EAACgB,EAAE,CAAC,GAAG,CAACC,OAAO,MAAE,CAAC,CACtC,CACF,CAEA,mBAAOd,IAAA,CAAAE,SAAA,EAAAG,QAAA,CAAGA,QAAQ,CAAG,CAAC,CACxB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}