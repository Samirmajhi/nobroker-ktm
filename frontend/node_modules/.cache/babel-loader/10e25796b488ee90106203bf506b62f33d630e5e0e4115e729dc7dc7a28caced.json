{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nconst initialState = {\n  favorites: [],\n  loading: false,\n  error: null\n};\n\n// Async thunks\nexport const fetchFavorites = createAsyncThunk('favorites/fetchFavorites', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await fetch('/api/favorites', {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    const data = await response.json();\n    if (!response.ok) throw new Error(data.error || 'Failed to fetch favorites');\n    return data.favorites || data;\n  } catch (error) {\n    return rejectWithValue(error.message || 'Failed to fetch favorites');\n  }\n});\nexport const addToFavorites = createAsyncThunk('favorites/addToFavorites', async (listingId, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await fetch('/api/favorites', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      },\n      body: JSON.stringify({\n        listing_id: listingId\n      })\n    });\n    const data = await response.json();\n    if (!response.ok) throw new Error(data.error || 'Failed to add to favorites');\n    return data.favorite || data;\n  } catch (error) {\n    return rejectWithValue(error.message || 'Failed to add to favorites');\n  }\n});\nexport const removeFromFavorites = createAsyncThunk('favorites/removeFromFavorites', async (listingId, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await fetch(`/api/favorites/${listingId}`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    if (!response.ok) {\n      const data = await response.json();\n      throw new Error(data.error || 'Failed to remove from favorites');\n    }\n    return listingId;\n  } catch (error) {\n    return rejectWithValue(error.message || 'Failed to remove from favorites');\n  }\n});\nconst favoritesSlice = createSlice({\n  name: 'favorites',\n  initialState,\n  reducers: {\n    setFavorites: (state, action) => {\n      state.favorites = action.payload;\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    },\n    clearError: state => {\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Fetch Favorites\n    .addCase(fetchFavorites.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchFavorites.fulfilled, (state, action) => {\n      state.loading = false;\n      state.favorites = action.payload;\n      state.error = null;\n    }).addCase(fetchFavorites.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Add to Favorites\n    .addCase(addToFavorites.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(addToFavorites.fulfilled, (state, action) => {\n      state.loading = false;\n      state.favorites.push(action.payload);\n      state.error = null;\n    }).addCase(addToFavorites.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Remove from Favorites\n    .addCase(removeFromFavorites.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(removeFromFavorites.fulfilled, (state, action) => {\n      state.loading = false;\n      state.favorites = state.favorites.filter(fav => fav.listing_id !== action.payload);\n      state.error = null;\n    }).addCase(removeFromFavorites.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  setFavorites,\n  setLoading,\n  setError,\n  clearError\n} = favoritesSlice.actions;\nexport default favoritesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","favorites","loading","error","fetchFavorites","_","rejectWithValue","response","fetch","headers","localStorage","getItem","data","json","ok","Error","message","addToFavorites","listingId","method","body","JSON","stringify","listing_id","favorite","removeFromFavorites","favoritesSlice","name","reducers","setFavorites","state","action","payload","setLoading","setError","clearError","extraReducers","builder","addCase","pending","fulfilled","rejected","push","filter","fav","actions","reducer"],"sources":["/home/anonymous/Downloads/no-broker-kathmandu/frontend/src/store/slices/favoritesSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AsyncThunkConfig } from '../store';\r\n\r\nexport interface Favorite {\r\n  favorite_id: string;\r\n  user_id: string;\r\n  listing_id: string;\r\n  created_at: string;\r\n  listing: {\r\n    listing_id: string;\r\n    title: string;\r\n    location: string;\r\n    price: number;\r\n    primary_photo?: string;\r\n    bedrooms: number;\r\n    bathrooms: number;\r\n  };\r\n}\r\n\r\ninterface FavoritesState {\r\n  favorites: Favorite[];\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: FavoritesState = {\r\n  favorites: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\n// Async thunks\r\nexport const fetchFavorites = createAsyncThunk<\r\n  Favorite[],\r\n  void,\r\n  AsyncThunkConfig\r\n>(\r\n  'favorites/fetchFavorites',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetch('/api/favorites', {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if (!response.ok) throw new Error(data.error || 'Failed to fetch favorites');\r\n      return data.favorites || data;\r\n    } catch (error: any) {\r\n      return rejectWithValue(error.message || 'Failed to fetch favorites');\r\n    }\r\n  }\r\n);\r\n\r\nexport const addToFavorites = createAsyncThunk<\r\n  Favorite,\r\n  string,\r\n  AsyncThunkConfig\r\n>(\r\n  'favorites/addToFavorites',\r\n  async (listingId, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetch('/api/favorites', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n        body: JSON.stringify({ listing_id: listingId }),\r\n      });\r\n      const data = await response.json();\r\n      if (!response.ok) throw new Error(data.error || 'Failed to add to favorites');\r\n      return data.favorite || data;\r\n    } catch (error: any) {\r\n      return rejectWithValue(error.message || 'Failed to add to favorites');\r\n    }\r\n  }\r\n);\r\n\r\nexport const removeFromFavorites = createAsyncThunk<\r\n  string,\r\n  string,\r\n  AsyncThunkConfig\r\n>(\r\n  'favorites/removeFromFavorites',\r\n  async (listingId, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetch(`/api/favorites/${listingId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        throw new Error(data.error || 'Failed to remove from favorites');\r\n      }\r\n      return listingId;\r\n    } catch (error: any) {\r\n      return rejectWithValue(error.message || 'Failed to remove from favorites');\r\n    }\r\n  }\r\n);\r\n\r\nconst favoritesSlice = createSlice({\r\n  name: 'favorites',\r\n  initialState,\r\n  reducers: {\r\n    setFavorites: (state, action: PayloadAction<Favorite[]>) => {\r\n      state.favorites = action.payload;\r\n    },\r\n    setLoading: (state, action: PayloadAction<boolean>) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setError: (state, action: PayloadAction<string | null>) => {\r\n      state.error = action.payload;\r\n    },\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Fetch Favorites\r\n      .addCase(fetchFavorites.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchFavorites.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.favorites = action.payload;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchFavorites.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload as string;\r\n      })\r\n      // Add to Favorites\r\n      .addCase(addToFavorites.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(addToFavorites.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.favorites.push(action.payload);\r\n        state.error = null;\r\n      })\r\n      .addCase(addToFavorites.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload as string;\r\n      })\r\n      // Remove from Favorites\r\n      .addCase(removeFromFavorites.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(removeFromFavorites.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.favorites = state.favorites.filter(fav => fav.listing_id !== action.payload);\r\n        state.error = null;\r\n      })\r\n      .addCase(removeFromFavorites.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload as string;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { setFavorites, setLoading, setError, clearError } = favoritesSlice.actions;\r\nexport default favoritesSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}