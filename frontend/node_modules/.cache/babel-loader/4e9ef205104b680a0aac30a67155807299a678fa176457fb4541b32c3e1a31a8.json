{"ast":null,"code":"// Configuration for No-Broker Kathmandu Frontend\nexport const config={// API Configuration\nAPI_BASE_URL:process.env.REACT_APP_API_URL||'http://localhost:5000/api',// Image Configuration\nIMAGE_BASE_URL:process.env.REACT_APP_IMAGE_URL||'http://localhost:5000',// App Configuration\nAPP_NAME:'No-Broker Kathmandu',APP_VERSION:'1.0.0',// Feature Flags\nFEATURES:{IMAGE_UPLOAD:true,REAL_TIME_MESSAGING:true,VISIT_SCHEDULING:true,FAVORITES:true,KYC_VERIFICATION:true,PAYMENTS:false// Disabled for now\n},// File Upload Limits\nUPLOAD:{MAX_FILE_SIZE:5*1024*1024,// 5MB\nMAX_FILES:10,ALLOWED_TYPES:['image/jpeg','image/png','image/webp']},// Pagination\nPAGINATION:{DEFAULT_PAGE_SIZE:10,MAX_PAGE_SIZE:50}};// Helper function to get full image URL\nexport const getImageUrl=imagePath=>{if(!imagePath){return'/placeholder-property.jpg';}// If it's already a full URL, return as is\nif(imagePath.startsWith('http://')||imagePath.startsWith('https://')){return imagePath;}// If it's a relative path, prepend the image base URL\nif(imagePath.startsWith('/')){return\"\".concat(config.IMAGE_BASE_URL).concat(imagePath);}// Otherwise, assume it's a relative path and prepend the image base URL\nreturn\"\".concat(config.IMAGE_BASE_URL,\"/\").concat(imagePath);};// Helper function to validate image URL\nexport const isValidImageUrl=url=>{try{new URL(url);return true;}catch(_unused){return false;}};export default config;","map":{"version":3,"names":["config","API_BASE_URL","process","env","REACT_APP_API_URL","IMAGE_BASE_URL","REACT_APP_IMAGE_URL","APP_NAME","APP_VERSION","FEATURES","IMAGE_UPLOAD","REAL_TIME_MESSAGING","VISIT_SCHEDULING","FAVORITES","KYC_VERIFICATION","PAYMENTS","UPLOAD","MAX_FILE_SIZE","MAX_FILES","ALLOWED_TYPES","PAGINATION","DEFAULT_PAGE_SIZE","MAX_PAGE_SIZE","getImageUrl","imagePath","startsWith","concat","isValidImageUrl","url","URL","_unused"],"sources":["/home/anonymous/Downloads/no-broker-kathmandu/frontend/src/services/config.ts"],"sourcesContent":["// Configuration for No-Broker Kathmandu Frontend\r\n\r\nexport const config = {\r\n  // API Configuration\r\n  API_BASE_URL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n  \r\n  // Image Configuration\r\n  IMAGE_BASE_URL: process.env.REACT_APP_IMAGE_URL || 'http://localhost:5000',\r\n  \r\n  // App Configuration\r\n  APP_NAME: 'No-Broker Kathmandu',\r\n  APP_VERSION: '1.0.0',\r\n  \r\n  // Feature Flags\r\n  FEATURES: {\r\n    IMAGE_UPLOAD: true,\r\n    REAL_TIME_MESSAGING: true,\r\n    VISIT_SCHEDULING: true,\r\n    FAVORITES: true,\r\n    KYC_VERIFICATION: true,\r\n    PAYMENTS: false, // Disabled for now\r\n  },\r\n  \r\n  // File Upload Limits\r\n  UPLOAD: {\r\n    MAX_FILE_SIZE: 5 * 1024 * 1024, // 5MB\r\n    MAX_FILES: 10,\r\n    ALLOWED_TYPES: ['image/jpeg', 'image/png', 'image/webp'],\r\n  },\r\n  \r\n  // Pagination\r\n  PAGINATION: {\r\n    DEFAULT_PAGE_SIZE: 10,\r\n    MAX_PAGE_SIZE: 50,\r\n  },\r\n};\r\n\r\n// Helper function to get full image URL\r\nexport const getImageUrl = (imagePath: string | null | undefined): string => {\r\n  if (!imagePath) {\r\n    return '/placeholder-property.jpg';\r\n  }\r\n  \r\n  // If it's already a full URL, return as is\r\n  if (imagePath.startsWith('http://') || imagePath.startsWith('https://')) {\r\n    return imagePath;\r\n  }\r\n  \r\n  // If it's a relative path, prepend the image base URL\r\n  if (imagePath.startsWith('/')) {\r\n    return `${config.IMAGE_BASE_URL}${imagePath}`;\r\n  }\r\n  \r\n  // Otherwise, assume it's a relative path and prepend the image base URL\r\n  return `${config.IMAGE_BASE_URL}/${imagePath}`;\r\n};\r\n\r\n// Helper function to validate image URL\r\nexport const isValidImageUrl = (url: string): boolean => {\r\n  try {\r\n    new URL(url);\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default config;\r\n"],"mappings":"AAAA;AAEA,MAAO,MAAM,CAAAA,MAAM,CAAG,CACpB;AACAC,YAAY,CAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,2BAA2B,CAE1E;AACAC,cAAc,CAAEH,OAAO,CAACC,GAAG,CAACG,mBAAmB,EAAI,uBAAuB,CAE1E;AACAC,QAAQ,CAAE,qBAAqB,CAC/BC,WAAW,CAAE,OAAO,CAEpB;AACAC,QAAQ,CAAE,CACRC,YAAY,CAAE,IAAI,CAClBC,mBAAmB,CAAE,IAAI,CACzBC,gBAAgB,CAAE,IAAI,CACtBC,SAAS,CAAE,IAAI,CACfC,gBAAgB,CAAE,IAAI,CACtBC,QAAQ,CAAE,KAAO;AACnB,CAAC,CAED;AACAC,MAAM,CAAE,CACNC,aAAa,CAAE,CAAC,CAAG,IAAI,CAAG,IAAI,CAAE;AAChCC,SAAS,CAAE,EAAE,CACbC,aAAa,CAAE,CAAC,YAAY,CAAE,WAAW,CAAE,YAAY,CACzD,CAAC,CAED;AACAC,UAAU,CAAE,CACVC,iBAAiB,CAAE,EAAE,CACrBC,aAAa,CAAE,EACjB,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,WAAW,CAAIC,SAAoC,EAAa,CAC3E,GAAI,CAACA,SAAS,CAAE,CACd,MAAO,2BAA2B,CACpC,CAEA;AACA,GAAIA,SAAS,CAACC,UAAU,CAAC,SAAS,CAAC,EAAID,SAAS,CAACC,UAAU,CAAC,UAAU,CAAC,CAAE,CACvE,MAAO,CAAAD,SAAS,CAClB,CAEA;AACA,GAAIA,SAAS,CAACC,UAAU,CAAC,GAAG,CAAC,CAAE,CAC7B,SAAAC,MAAA,CAAU1B,MAAM,CAACK,cAAc,EAAAqB,MAAA,CAAGF,SAAS,EAC7C,CAEA;AACA,SAAAE,MAAA,CAAU1B,MAAM,CAACK,cAAc,MAAAqB,MAAA,CAAIF,SAAS,EAC9C,CAAC,CAED;AACA,MAAO,MAAM,CAAAG,eAAe,CAAIC,GAAW,EAAc,CACvD,GAAI,CACF,GAAI,CAAAC,GAAG,CAACD,GAAG,CAAC,CACZ,MAAO,KAAI,CACb,CAAE,MAAAE,OAAA,CAAM,CACN,MAAO,MAAK,CACd,CACF,CAAC,CAED,cAAe,CAAA9B,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}