{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { authService } from '../../services/authService';\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: !!localStorage.getItem('token'),\n  isLoading: false,\n  loading: false,\n  // Add this for backward compatibility\n  error: null\n};\n\n// Async thunks\nexport const login = createAsyncThunk('auth/login', async (credentials, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authService.login(credentials);\n    localStorage.setItem('token', response.token);\n    // Ensure the user object has all required properties\n    const user = {\n      user_id: response.user.user_id,\n      full_name: response.user.full_name,\n      email: response.user.email,\n      phone: response.user.phone,\n      role: response.user.role,\n      kyc_status: response.user.kyc_status,\n      profile_picture_url: response.user.profile_picture_url,\n      email_verified: response.user.email_verified,\n      phone_verified: response.user.phone_verified,\n      created_at: response.user.created_at\n    };\n    return {\n      user,\n      token: response.token\n    };\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed');\n  }\n});\nexport const register = createAsyncThunk('auth/register', async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authService.register(userData);\n    localStorage.setItem('token', response.token);\n    // Ensure the user object has all required properties\n    const user = {\n      user_id: response.user.user_id,\n      full_name: response.user.full_name,\n      email: response.user.email,\n      phone: response.user.phone,\n      role: response.user.role,\n      kyc_status: response.user.kyc_status,\n      profile_picture_url: response.user.profile_picture_url,\n      email_verified: response.user.email_verified,\n      phone_verified: response.user.phone_verified,\n      created_at: response.user.created_at\n    };\n    return {\n      user,\n      token: response.token\n    };\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed');\n  }\n});\nexport const getProfile = createAsyncThunk('auth/getProfile', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authService.getProfile();\n    // Ensure the user object has all required properties\n    const user = {\n      user_id: response.user.user_id,\n      full_name: response.user.full_name,\n      email: response.user.email,\n      phone: response.user.phone,\n      role: response.user.role,\n      kyc_status: response.user.kyc_status,\n      profile_picture_url: response.user.profile_picture_url,\n      email_verified: response.user.email_verified,\n      phone_verified: response.user.phone_verified,\n      created_at: response.user.created_at\n    };\n    return user;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    return rejectWithValue(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Failed to fetch profile');\n  }\n});\nexport const updateProfile = createAsyncThunk('auth/updateProfile', async (profileData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authService.updateProfile(profileData);\n    // Ensure the user object has all required properties\n    const user = {\n      user_id: response.user.user_id,\n      full_name: response.user.full_name,\n      email: response.user.email,\n      phone: response.user.phone,\n      role: response.user.role,\n      kyc_status: response.user.kyc_status,\n      profile_picture_url: response.user.profile_picture_url,\n      email_verified: response.user.email_verified,\n      phone_verified: response.user.phone_verified,\n      created_at: response.user.created_at\n    };\n    return user;\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    return rejectWithValue(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Failed to update profile');\n  }\n});\nexport const changePassword = createAsyncThunk('auth/changePassword', async (passwordData, {\n  rejectWithValue\n}) => {\n  try {\n    await authService.changePassword(passwordData);\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n    return rejectWithValue(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || 'Failed to change password');\n  }\n});\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  localStorage.removeItem('token');\n  return null;\n});\n\n// New action for staff login that bypasses the normal login flow\nexport const staffLogin = createAsyncThunk('auth/staffLogin', async data => {\n  // For staff login, we already have the user data and token\n  // Just return them to update the state\n  return data;\n});\n\n// SSO login action for handling OAuth callbacks\nexport const ssoLogin = createAsyncThunk('auth/ssoLogin', async (token, {\n  rejectWithValue\n}) => {\n  try {\n    // Set token in localStorage\n    localStorage.setItem('token', token);\n\n    // Get user profile\n    const response = await authService.getProfile();\n    return response.user;\n  } catch (error) {\n    var _error$response6, _error$response6$data;\n    return rejectWithValue(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.error) || 'SSO login failed');\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    clearError: state => {\n      state.error = null;\n    },\n    setToken: (state, action) => {\n      state.token = action.payload;\n      state.isAuthenticated = true;\n      localStorage.setItem('token', action.payload);\n    },\n    clearToken: state => {\n      state.token = null;\n      state.isAuthenticated = false;\n      localStorage.removeItem('token');\n    },\n    updateUser: (state, action) => {\n      if (state.user) {\n        state.user = {\n          ...state.user,\n          ...action.payload\n        };\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Login\n    .addCase(login.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.error = null;\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    })\n    // Register\n    .addCase(register.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.error = null;\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    })\n    // Get Profile\n    .addCase(getProfile.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(getProfile.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.loading = false;\n      state.user = action.payload;\n      state.error = null;\n    }).addCase(getProfile.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    })\n    // Update Profile\n    .addCase(updateProfile.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(updateProfile.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.loading = false;\n      state.user = action.payload;\n      state.error = null;\n    }).addCase(updateProfile.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    })\n    // Change Password\n    .addCase(changePassword.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(changePassword.fulfilled, state => {\n      state.isLoading = false;\n      state.loading = false;\n      state.error = null;\n    }).addCase(changePassword.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    })\n    // Logout\n    .addCase(logout.fulfilled, state => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.error = null;\n    })\n    // Staff Login\n    .addCase(staffLogin.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.error = null;\n    })\n    // SSO Login\n    .addCase(ssoLogin.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(ssoLogin.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload;\n      state.token = localStorage.getItem('token');\n      state.error = null;\n    }).addCase(ssoLogin.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  clearError,\n  setToken,\n  clearToken,\n  updateUser\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","initialState","user","token","localStorage","getItem","isAuthenticated","isLoading","loading","error","login","credentials","rejectWithValue","response","setItem","user_id","full_name","email","phone","role","kyc_status","profile_picture_url","email_verified","phone_verified","created_at","_error$response","_error$response$data","data","register","userData","_error$response2","_error$response2$data","getProfile","_","_error$response3","_error$response3$data","updateProfile","profileData","_error$response4","_error$response4$data","changePassword","passwordData","_error$response5","_error$response5$data","logout","removeItem","staffLogin","ssoLogin","_error$response6","_error$response6$data","authSlice","name","reducers","clearError","state","setToken","action","payload","clearToken","updateUser","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["/home/anonymous/Downloads/no-broker-kathmandu/frontend/src/store/slices/authSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\r\nimport { authService } from '../../services/authService';\r\nimport { AsyncThunkConfig } from '../store';\r\n\r\nexport interface User {\r\n  user_id: string;\r\n  full_name: string;\r\n  email: string;\r\n  phone: string;\r\n  role: 'tenant' | 'owner' | 'staff' | 'admin';\r\n  kyc_status: 'pending' | 'verified' | 'rejected';\r\n  profile_picture_url?: string;\r\n  email_verified: boolean;\r\n  phone_verified: boolean;\r\n  created_at: string;\r\n}\r\n\r\nexport interface AuthState {\r\n  user: User | null;\r\n  token: string | null;\r\n  isAuthenticated: boolean;\r\n  isLoading: boolean;\r\n  loading: boolean; // Add this for backward compatibility\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  user: null,\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: !!localStorage.getItem('token'),\r\n  isLoading: false,\r\n  loading: false, // Add this for backward compatibility\r\n  error: null,\r\n};\r\n\r\n// Async thunks\r\nexport const login = createAsyncThunk<\r\n  { user: User; token: string },\r\n  { email: string; password: string },\r\n  AsyncThunkConfig\r\n>(\r\n  'auth/login',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await authService.login(credentials);\r\n      localStorage.setItem('token', response.token);\r\n      // Ensure the user object has all required properties\r\n      const user: User = {\r\n        user_id: response.user.user_id,\r\n        full_name: response.user.full_name,\r\n        email: response.user.email,\r\n        phone: response.user.phone,\r\n        role: response.user.role,\r\n        kyc_status: response.user.kyc_status,\r\n        profile_picture_url: response.user.profile_picture_url,\r\n        email_verified: response.user.email_verified,\r\n        phone_verified: response.user.phone_verified,\r\n        created_at: response.user.created_at,\r\n      };\r\n      return { user, token: response.token };\r\n    } catch (error: any) {\r\n      return rejectWithValue(error.response?.data?.error || 'Login failed');\r\n    }\r\n  }\r\n);\r\n\r\nexport const register = createAsyncThunk<\r\n  { user: User; token: string },\r\n  {\r\n    fullName: string;\r\n    email: string;\r\n    phone: string;\r\n    password: string;\r\n    role: 'tenant' | 'owner' | 'staff';\r\n  },\r\n  AsyncThunkConfig\r\n>(\r\n  'auth/register',\r\n  async (userData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await authService.register(userData);\r\n      localStorage.setItem('token', response.token);\r\n      // Ensure the user object has all required properties\r\n      const user: User = {\r\n        user_id: response.user.user_id,\r\n        full_name: response.user.full_name,\r\n        email: response.user.email,\r\n        phone: response.user.phone,\r\n        role: response.user.role,\r\n        kyc_status: response.user.kyc_status,\r\n        profile_picture_url: response.user.profile_picture_url,\r\n        email_verified: response.user.email_verified,\r\n        phone_verified: response.user.phone_verified,\r\n        created_at: response.user.created_at,\r\n      };\r\n      return { user, token: response.token };\r\n    } catch (error: any) {\r\n      return rejectWithValue(error.response?.data?.error || 'Registration failed');\r\n    }\r\n  }\r\n);\r\n\r\nexport const getProfile = createAsyncThunk<\r\n  User,\r\n  void,\r\n  AsyncThunkConfig\r\n>(\r\n  'auth/getProfile',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const response = await authService.getProfile();\r\n      // Ensure the user object has all required properties\r\n      const user: User = {\r\n        user_id: response.user.user_id,\r\n        full_name: response.user.full_name,\r\n        email: response.user.email,\r\n        phone: response.user.phone,\r\n        role: response.user.role,\r\n        kyc_status: response.user.kyc_status,\r\n        profile_picture_url: response.user.profile_picture_url,\r\n        email_verified: response.user.email_verified,\r\n        phone_verified: response.user.phone_verified,\r\n        created_at: response.user.created_at,\r\n      };\r\n      return user;\r\n    } catch (error: any) {\r\n      return rejectWithValue(error.response?.data?.error || 'Failed to fetch profile');\r\n    }\r\n  }\r\n);\r\n\r\nexport const updateProfile = createAsyncThunk<\r\n  User,\r\n  {\r\n    fullName?: string;\r\n    phone?: string;\r\n    profilePictureUrl?: string;\r\n  },\r\n  AsyncThunkConfig\r\n>(\r\n  'auth/updateProfile',\r\n  async (profileData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await authService.updateProfile(profileData);\r\n      // Ensure the user object has all required properties\r\n      const user: User = {\r\n        user_id: response.user.user_id,\r\n        full_name: response.user.full_name,\r\n        email: response.user.email,\r\n        phone: response.user.phone,\r\n        role: response.user.role,\r\n        kyc_status: response.user.kyc_status,\r\n        profile_picture_url: response.user.profile_picture_url,\r\n        email_verified: response.user.email_verified,\r\n        phone_verified: response.user.phone_verified,\r\n        created_at: response.user.created_at,\r\n      };\r\n      return user;\r\n    } catch (error: any) {\r\n      return rejectWithValue(error.response?.data?.error || 'Failed to update profile');\r\n    }\r\n  }\r\n);\r\n\r\nexport const changePassword = createAsyncThunk<\r\n  void,\r\n  {\r\n    currentPassword: string;\r\n    newPassword: string;\r\n  },\r\n  AsyncThunkConfig\r\n>(\r\n  'auth/changePassword',\r\n  async (passwordData, { rejectWithValue }) => {\r\n    try {\r\n      await authService.changePassword(passwordData);\r\n    } catch (error: any) {\r\n      return rejectWithValue(error.response?.data?.error || 'Failed to change password');\r\n    }\r\n  }\r\n);\r\n\r\nexport const logout = createAsyncThunk<\r\n  null,\r\n  void,\r\n  AsyncThunkConfig\r\n>(\r\n  'auth/logout',\r\n  async () => {\r\n    localStorage.removeItem('token');\r\n    return null;\r\n  }\r\n);\r\n\r\n// New action for staff login that bypasses the normal login flow\r\nexport const staffLogin = createAsyncThunk<\r\n  { user: User; token: string },\r\n  { user: User; token: string },\r\n  AsyncThunkConfig\r\n>(\r\n  'auth/staffLogin',\r\n  async (data) => {\r\n    // For staff login, we already have the user data and token\r\n    // Just return them to update the state\r\n    return data;\r\n  }\r\n);\r\n\r\n// SSO login action for handling OAuth callbacks\r\nexport const ssoLogin = createAsyncThunk<\r\n  User,\r\n  string, // token\r\n  AsyncThunkConfig\r\n>(\r\n  'auth/ssoLogin',\r\n  async (token, { rejectWithValue }) => {\r\n    try {\r\n      // Set token in localStorage\r\n      localStorage.setItem('token', token);\r\n      \r\n      // Get user profile\r\n      const response = await authService.getProfile();\r\n      return response.user;\r\n    } catch (error: any) {\r\n      return rejectWithValue(error.response?.data?.error || 'SSO login failed');\r\n    }\r\n  }\r\n);\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n    setToken: (state, action: PayloadAction<string>) => {\r\n      state.token = action.payload;\r\n      state.isAuthenticated = true;\r\n      localStorage.setItem('token', action.payload);\r\n    },\r\n    clearToken: (state) => {\r\n      state.token = null;\r\n      state.isAuthenticated = false;\r\n      localStorage.removeItem('token');\r\n    },\r\n    updateUser: (state, action: PayloadAction<Partial<User>>) => {\r\n      if (state.user) {\r\n        state.user = { ...state.user, ...action.payload };\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Login\r\n      .addCase(login.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.loading = false;\r\n        state.isAuthenticated = true;\r\n        state.user = action.payload.user;\r\n        state.token = action.payload.token;\r\n        state.error = null;\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload as string;\r\n      })\r\n      // Register\r\n      .addCase(register.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(register.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.loading = false;\r\n        state.isAuthenticated = true;\r\n        state.user = action.payload.user;\r\n        state.token = action.payload.token;\r\n        state.error = null;\r\n      })\r\n      .addCase(register.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload as string;\r\n      })\r\n      // Get Profile\r\n      .addCase(getProfile.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(getProfile.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.loading = false;\r\n        state.user = action.payload;\r\n        state.error = null;\r\n      })\r\n      .addCase(getProfile.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload as string;\r\n      })\r\n      // Update Profile\r\n      .addCase(updateProfile.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(updateProfile.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.loading = false;\r\n        state.user = action.payload;\r\n        state.error = null;\r\n      })\r\n      .addCase(updateProfile.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload as string;\r\n      })\r\n      // Change Password\r\n      .addCase(changePassword.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(changePassword.fulfilled, (state) => {\r\n        state.isLoading = false;\r\n        state.loading = false;\r\n        state.error = null;\r\n      })\r\n      .addCase(changePassword.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload as string;\r\n      })\r\n      // Logout\r\n      .addCase(logout.fulfilled, (state) => {\r\n        state.user = null;\r\n        state.token = null;\r\n        state.isAuthenticated = false;\r\n        state.error = null;\r\n      })\r\n      // Staff Login\r\n      .addCase(staffLogin.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.loading = false;\r\n        state.isAuthenticated = true;\r\n        state.user = action.payload.user;\r\n        state.token = action.payload.token;\r\n        state.error = null;\r\n      })\r\n      // SSO Login\r\n      .addCase(ssoLogin.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(ssoLogin.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.loading = false;\r\n        state.isAuthenticated = true;\r\n        state.user = action.payload;\r\n        state.token = localStorage.getItem('token');\r\n        state.error = null;\r\n      })\r\n      .addCase(ssoLogin.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload as string;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { clearError, setToken, clearToken, updateUser } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}