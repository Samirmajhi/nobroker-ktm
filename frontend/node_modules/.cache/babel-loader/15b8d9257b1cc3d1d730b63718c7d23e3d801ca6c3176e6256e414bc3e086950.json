{"ast":null,"code":"// Configuration for No-Broker Kathmandu Frontend\n\nexport const config = {\n  // API Configuration\n  API_BASE_URL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  // Image Configuration\n  IMAGE_BASE_URL: process.env.REACT_APP_IMAGE_URL || 'http://localhost:5000',\n  // App Configuration\n  APP_NAME: 'No-Broker Kathmandu',\n  APP_VERSION: '1.0.0',\n  // Feature Flags\n  FEATURES: {\n    IMAGE_UPLOAD: true,\n    REAL_TIME_MESSAGING: true,\n    VISIT_SCHEDULING: true,\n    FAVORITES: true,\n    KYC_VERIFICATION: true,\n    PAYMENTS: false // Disabled for now\n  },\n  // File Upload Limits\n  UPLOAD: {\n    MAX_FILE_SIZE: 5 * 1024 * 1024,\n    // 5MB\n    MAX_FILES: 10,\n    ALLOWED_TYPES: ['image/jpeg', 'image/png', 'image/webp']\n  },\n  // Pagination\n  PAGINATION: {\n    DEFAULT_PAGE_SIZE: 10,\n    MAX_PAGE_SIZE: 50\n  }\n};\n\n// Helper function to get full image URL\nexport const getImageUrl = imagePath => {\n  if (!imagePath) {\n    return '/placeholder-property.jpg';\n  }\n\n  // If it's already a full URL, return as is\n  if (imagePath.startsWith('http://') || imagePath.startsWith('https://')) {\n    return imagePath;\n  }\n\n  // If it's a relative path, prepend the image base URL\n  if (imagePath.startsWith('/')) {\n    return `${config.IMAGE_BASE_URL}${imagePath}`;\n  }\n\n  // Otherwise, assume it's a relative path and prepend the image base URL\n  return `${config.IMAGE_BASE_URL}/${imagePath}`;\n};\n\n// Helper function to validate image URL\nexport const isValidImageUrl = url => {\n  try {\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n};\nexport default config;","map":{"version":3,"names":["config","API_BASE_URL","process","env","REACT_APP_API_URL","IMAGE_BASE_URL","REACT_APP_IMAGE_URL","APP_NAME","APP_VERSION","FEATURES","IMAGE_UPLOAD","REAL_TIME_MESSAGING","VISIT_SCHEDULING","FAVORITES","KYC_VERIFICATION","PAYMENTS","UPLOAD","MAX_FILE_SIZE","MAX_FILES","ALLOWED_TYPES","PAGINATION","DEFAULT_PAGE_SIZE","MAX_PAGE_SIZE","getImageUrl","imagePath","startsWith","isValidImageUrl","url","URL"],"sources":["C:/Users/aghim/no-broker-kathmandu/frontend/src/services/config.ts"],"sourcesContent":["// Configuration for No-Broker Kathmandu Frontend\r\n\r\nexport const config = {\r\n  // API Configuration\r\n  API_BASE_URL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n  \r\n  // Image Configuration\r\n  IMAGE_BASE_URL: process.env.REACT_APP_IMAGE_URL || 'http://localhost:5000',\r\n  \r\n  // App Configuration\r\n  APP_NAME: 'No-Broker Kathmandu',\r\n  APP_VERSION: '1.0.0',\r\n  \r\n  // Feature Flags\r\n  FEATURES: {\r\n    IMAGE_UPLOAD: true,\r\n    REAL_TIME_MESSAGING: true,\r\n    VISIT_SCHEDULING: true,\r\n    FAVORITES: true,\r\n    KYC_VERIFICATION: true,\r\n    PAYMENTS: false, // Disabled for now\r\n  },\r\n  \r\n  // File Upload Limits\r\n  UPLOAD: {\r\n    MAX_FILE_SIZE: 5 * 1024 * 1024, // 5MB\r\n    MAX_FILES: 10,\r\n    ALLOWED_TYPES: ['image/jpeg', 'image/png', 'image/webp'],\r\n  },\r\n  \r\n  // Pagination\r\n  PAGINATION: {\r\n    DEFAULT_PAGE_SIZE: 10,\r\n    MAX_PAGE_SIZE: 50,\r\n  },\r\n};\r\n\r\n// Helper function to get full image URL\r\nexport const getImageUrl = (imagePath: string | null | undefined): string => {\r\n  if (!imagePath) {\r\n    return '/placeholder-property.jpg';\r\n  }\r\n  \r\n  // If it's already a full URL, return as is\r\n  if (imagePath.startsWith('http://') || imagePath.startsWith('https://')) {\r\n    return imagePath;\r\n  }\r\n  \r\n  // If it's a relative path, prepend the image base URL\r\n  if (imagePath.startsWith('/')) {\r\n    return `${config.IMAGE_BASE_URL}${imagePath}`;\r\n  }\r\n  \r\n  // Otherwise, assume it's a relative path and prepend the image base URL\r\n  return `${config.IMAGE_BASE_URL}/${imagePath}`;\r\n};\r\n\r\n// Helper function to validate image URL\r\nexport const isValidImageUrl = (url: string): boolean => {\r\n  try {\r\n    new URL(url);\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default config;\r\n"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,MAAM,GAAG;EACpB;EACAC,YAAY,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;EAE1E;EACAC,cAAc,EAAEH,OAAO,CAACC,GAAG,CAACG,mBAAmB,IAAI,uBAAuB;EAE1E;EACAC,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,OAAO;EAEpB;EACAC,QAAQ,EAAE;IACRC,YAAY,EAAE,IAAI;IAClBC,mBAAmB,EAAE,IAAI;IACzBC,gBAAgB,EAAE,IAAI;IACtBC,SAAS,EAAE,IAAI;IACfC,gBAAgB,EAAE,IAAI;IACtBC,QAAQ,EAAE,KAAK,CAAE;EACnB,CAAC;EAED;EACAC,MAAM,EAAE;IACNC,aAAa,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI;IAAE;IAChCC,SAAS,EAAE,EAAE;IACbC,aAAa,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,YAAY;EACzD,CAAC;EAED;EACAC,UAAU,EAAE;IACVC,iBAAiB,EAAE,EAAE;IACrBC,aAAa,EAAE;EACjB;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAIC,SAAoC,IAAa;EAC3E,IAAI,CAACA,SAAS,EAAE;IACd,OAAO,2BAA2B;EACpC;;EAEA;EACA,IAAIA,SAAS,CAACC,UAAU,CAAC,SAAS,CAAC,IAAID,SAAS,CAACC,UAAU,CAAC,UAAU,CAAC,EAAE;IACvE,OAAOD,SAAS;EAClB;;EAEA;EACA,IAAIA,SAAS,CAACC,UAAU,CAAC,GAAG,CAAC,EAAE;IAC7B,OAAO,GAAGzB,MAAM,CAACK,cAAc,GAAGmB,SAAS,EAAE;EAC/C;;EAEA;EACA,OAAO,GAAGxB,MAAM,CAACK,cAAc,IAAImB,SAAS,EAAE;AAChD,CAAC;;AAED;AACA,OAAO,MAAME,eAAe,GAAIC,GAAW,IAAc;EACvD,IAAI;IACF,IAAIC,GAAG,CAACD,GAAG,CAAC;IACZ,OAAO,IAAI;EACb,CAAC,CAAC,MAAM;IACN,OAAO,KAAK;EACd;AACF,CAAC;AAED,eAAe3B,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}