{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:5000/api';// Create axios instance with default config\nconst api=axios.create({baseURL:API_BASE_URL});// Add request interceptor to include auth token\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Add response interceptor to handle auth errors\napi.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('token');window.location.href='/login';}return Promise.reject(error);});export const listingsAPI={// Create new listing (JSON)\ncreateListing:async listingData=>{const response=await api.post('/listings',listingData);return response.data;},// Upload listing photos (multipart)\nuploadPhotos:async function(listingId,files){let isPrimaryFirst=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;const formData=new FormData();files.forEach(file=>formData.append('photos',file));if(isPrimaryFirst){formData.append('isPrimary','true');}const response=await api.post(\"/listings/\".concat(listingId,\"/photos\"),formData);return response.data;},// Get all listings\ngetListings:async filters=>{const response=await api.get('/listings',{params:filters});return response.data;},// Get listing by ID\ngetListing:async id=>{const response=await api.get(\"/listings/\".concat(id));return response.data;},// Update listing\nupdateListing:async(id,listingData)=>{const response=await api.put(\"/listings/\".concat(id),listingData);return response.data;},// Delete listing\ndeleteListing:async id=>{const response=await api.delete(\"/listings/\".concat(id));return response.data;},// Get user's listings\ngetUserListings:async()=>{const response=await api.get('/listings/my-listings');return response.data;}};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","concat","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","listingsAPI","createListing","listingData","post","data","uploadPhotos","listingId","files","isPrimaryFirst","arguments","length","undefined","formData","FormData","forEach","file","append","getListings","filters","get","params","getListing","id","updateListing","put","deleteListing","delete","getUserListings"],"sources":["/home/anonymous/Downloads/no-broker-kathmandu/frontend/src/services/listingsAPI.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n});\r\n\r\n// Add request interceptor to include auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor to handle auth errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport interface CreateListingData {\r\n  title: string;\r\n  description: string;\r\n  price: number;\r\n  deposit: number;\r\n  size: number;\r\n  bedrooms: number;\r\n  bathrooms: number;\r\n  location: string;\r\n  latitude?: number;\r\n  longitude?: number;\r\n  amenities: string[];\r\n  availabilityDate?: string;\r\n  propertyType: string;\r\n  furnishingStatus: 'furnished' | 'semi-furnished' | 'unfurnished';\r\n  parkingAvailable: boolean;\r\n  petFriendly: boolean;\r\n}\r\n\r\nexport interface Listing {\r\n  listing_id: string;\r\n  owner_id: string;\r\n  title: string;\r\n  description: string;\r\n  price: number;\r\n  deposit: number;\r\n  size: number;\r\n  bedrooms: number;\r\n  bathrooms: number;\r\n  location: string;\r\n  latitude?: number;\r\n  longitude?: number;\r\n  amenities: string[];\r\n  availability_date?: string;\r\n  safe_rent_verified: boolean;\r\n  property_type: string;\r\n  furnishing_status: 'furnished' | 'semi-furnished' | 'unfurnished';\r\n  parking_available: boolean;\r\n  pet_friendly: boolean;\r\n  is_active: boolean;\r\n  created_at: string;\r\n  updated_at: string;\r\n  primary_photo?: string;\r\n  owner_name?: string;\r\n  owner_kyc_status?: string;\r\n  photos?: Array<{\r\n    photo_id: string;\r\n    photo_url: string;\r\n    photo_type: string;\r\n    is_primary: boolean;\r\n    created_at: string;\r\n  }>;\r\n  ratings?: {\r\n    average: number;\r\n    total: number;\r\n  };\r\n}\r\n\r\nexport const listingsAPI = {\r\n  // Create new listing (JSON)\r\n  createListing: async (listingData: CreateListingData) => {\r\n    const response = await api.post('/listings', listingData);\r\n    return response.data;\r\n  },\r\n\r\n  // Upload listing photos (multipart)\r\n  uploadPhotos: async (listingId: string, files: File[], isPrimaryFirst: boolean = true) => {\r\n    const formData = new FormData();\r\n    files.forEach((file) => formData.append('photos', file));\r\n    if (isPrimaryFirst) {\r\n      formData.append('isPrimary', 'true');\r\n    }\r\n    const response = await api.post(`/listings/${listingId}/photos`, formData);\r\n    return response.data;\r\n  },\r\n\r\n  // Get all listings\r\n  getListings: async (filters?: any) => {\r\n    const response = await api.get('/listings', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  // Get listing by ID\r\n  getListing: async (id: string) => {\r\n    const response = await api.get(`/listings/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Update listing\r\n  updateListing: async (id: string, listingData: Partial<CreateListingData>) => {\r\n    const response = await api.put(`/listings/${id}`, listingData);\r\n    return response.data;\r\n  },\r\n\r\n  // Delete listing\r\n  deleteListing: async (id: string) => {\r\n    const response = await api.delete(`/listings/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get user's listings\r\n  getUserListings: async () => {\r\n    const response = await api.get('/listings/my-listings');\r\n    return response.data;\r\n  },\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}